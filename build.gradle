import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        kotlinVersion = '1.3.72'
    }
}

plugins {
    id("org.jetbrains.kotlin.jvm") version "$kotlinVersion"
    id('java-library')
    id("org.jetbrains.dokka") version "0.10.1"
    id('maven-publish')
    id("com.diffplug.gradle.spotless") version "3.27.1"
    id('jacoco')
}

group = "tech.relaycorp"

repositories {
    jcenter()
}

dependencies {
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")

    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit5 integration.
    testImplementation("org.junit.jupiter:junit-jupiter:5.6.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.6.2")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = "1.8"
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = file("$buildDir/reports/coverage")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = "CLASS"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }
            limit {
                counter = "METHOD"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }

            limit {
                counter = "BRANCH"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }
        }
    }
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
    finalizedBy("jacocoTestReport")
    doLast {
        println("View code coverage at:")
        println("file://$buildDir/reports/coverage/index.html")
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.dokka {
    outputFormat = "html"
    outputDirectory = "$buildDir/docs/api"
}

publishing {
    publications {
        create("default", MavenPublication) {
            from(components["java"])

            pom {
                name.set(rootProject.name)
                description.set("PoWeb JVM library")
                url.set("https://github.com/relaycorp/relaynet-poweb-jvm")
                developers {
                    developer {
                        id.set("relaycorp")
                        name.set("Relaycorp, Inc.")
                        email.set("no-reply@relaycorp.tech")
                    }
                }
                licenses {
                    license {
                        name.set("Apache-2.0")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/relaycorp/relaynet-poweb-jvm.git")
                    developerConnection.set(
                            "scm:git:https://github.com/relaycorp/relaynet-poweb-jvm.git"
                    )
                    url.set("https://github.com/relaycorp/relaynet-poweb-jvm")
                }
            }
        }
    }
    repositories {
        maven {
            // publish=1 automatically publishes the version
            url = uri(
                    "https://api.bintray.com/maven/relaycorp/maven/tech.relaycorp.poweb/;publish=1"
            )
            credentials {
                username = System.getenv("BINTRAY_USERNAME")
                password = System.getenv("BINTRAY_KEY")
            }
        }
    }
}

spotless {
    def ktlintUserData = [
            "max_line_length": "100",
            "disabled_rules" : "import-ordering"
    ]
    kotlin {
        ktlint("0.36.0").userData(ktlintUserData)
    }
    kotlinGradle {
        ktlint().userData(ktlintUserData)
    }
}
