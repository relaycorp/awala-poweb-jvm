jacoco {
    toolVersion = "0.8.5"
}

def jacocoFiles = files([
        fileTree(
                dir: project.buildDir,
                includes: ["generated/source/proto/main/java/"],
                excludes: [
                        '**/tech.relaycorp.poweb.internal.protobuf_messages.handshake/**'
                ]
        )
])

jacocoTestReport {
    classDirectories.from = jacocoFiles

    reports {
        xml.enabled = true
        html.enabled = true
        html.destination = file("$buildDir/reports/coverage")
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.from = jacocoFiles
    }

    violationRules {
        rule {
            limit {
                counter = "CLASS"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }

            limit {
                counter = "METHOD"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }

            limit {
                counter = "BRANCH"
                value = "MISSEDCOUNT"
                maximum = "0".toBigDecimal()
            }
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
    finalizedBy("jacocoTestReport")
    doLast {
        println("View code coverage at:")
        println("file://$buildDir/reports/coverage/index.html")
    }
}
